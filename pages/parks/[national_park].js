import { useEffect, useMemo, useState } from 'react';
import Head from 'next/head'
import { GoogleMap, useLoadScript, Marker } from "@react-google-maps/api";

import Hero from '../../components/Hero'
import Slider from '../../components/Slider'
import Collage from '../../components/Collages'

import { useRouter } from 'next/router'
import { LocationData, SliderData } from '../../components/Data'
import axios from 'axios';

export default function NationalPark() {
  const router = useRouter()
  const { national_park } = router.query

  const location = LocationData.find(loc => loc.name === national_park);
  const images = SliderData.filter(img => img.location === national_park);

  if (location === undefined || images === undefined)
    return null

  const { isLoaded } = useLoadScript({
      googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,
  });

  const center = useMemo(() => (location.coordinates));

  const [parkData, setParkData] = useState()

  useEffect(() => {
    axios
      .get(`https://developer.nps.gov/api/v1/parks?parkCode=${location.code}&api_key=${process.env.NEXT_PUBLIC_NPS_API_KEY}`)
      .then(response => setParkData(response.data.data[0]))
  }, [])

  console.log(parkData)

  return (
    <div>
      <Head>
        <title>USA National Parks - {location.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Hero   
        heading={location.name} 
        message={`A collection of photographs taken at ${location.name} in ${location.state}.`}
        background={images[0].image}
      />

      <div className='mb-12'>
        <h3 className='text-center'>Photos</h3>
        <Slider images={images} />
      </div>

      <div className='mb-12 max-w-[1440px] m-auto'>
        <h3 className='text-center'>Collage</h3>
        <Collage images={images} />
      </div>

      {parkData !== undefined && (
      <>
        <div className='mb-12 max-w-[700px] px-4 m-auto'>
          <h3 className='text-center pb-4'>Description</h3>
          <p className='font-semibold'>General</p>
          <p>{parkData.description}</p>
          <br />
          <p className='font-semibold'>Weather</p>
          <p>{parkData.weatherInfo}</p>
          <br />
          <a target='_blank' href={parkData.url} className='text-blue-600 underline'>More information</a>
        </div>

        <div className='mb-12 max-w-[900px] m-auto'>
          <h3 className='text-center'>Opening hours</h3>
          {parkData.operatingHours.map(place => (
            <div key={place.name} className='px-4 py-2'>
              <p className='font-semibold pr-4'>{place.name}</p>
              <p>{place.description}</p>

            </div>
          ))}
        </div>

        <div className='mb-12 max-w-[700px] m-auto px-4'>
          <h3 className='text-center'>Price information</h3>
          <h4>Entrance fees</h4>
          {parkData.entranceFees.map((fee, index) => (
            <div key={index} className='flex py-2'>
              <p className='font-semibold pr-4'>${fee.cost}</p>
              <p>{fee.description === "" ? fee.title : fee.description}</p>
            </div>
          ))}
          <h4>Entrance passes</h4>
          {parkData.entrancePasses.map((pass, index) => (
            <div key={index} className='flex py-2'>
              <p className='font-semibold pr-4'>{pass.cost === '0.00' ? "Free" : `$${pass.cost}`}</p>
              <p>{pass.description}</p>
            </div>
          ))}
        </div>
      </>
      )}

      <div className='mb-12 max-w-[1240px] m-auto'>
        <h3 className='text-center'>Map</h3>
        <div className="mt-5 shadow-2xl">
          {!isLoaded ? <h1>Loading....</h1> :
          <GoogleMap 
              zoom={7} 
              center={center}
              mapContainerClassName="map-class"
          >
            <Marker position={location.coordinates} />
          </GoogleMap>}
        </div>
      </div>
    </div>
  )
}